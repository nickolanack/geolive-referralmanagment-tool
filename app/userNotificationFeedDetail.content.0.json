{
    "type": "plugin.Discussions.Discussion",
    "config": {
        "discussionTarget": "",
        "width": 0,
        "constrainHeight": false,
        "height": 100,
        "inlineEditing": true,
        "inlineReply": false,
        "inlineReplyNamedForm": "",
        "emptyMessage": "There are no events to display",
        "channel": "notifications",
        "resolveChannelScript": "if(AppClient.getUserType()==\"guest\"){\n    return 'gettingstarted';\n}\n\nreturn defaultChannel;",
        "resolveItemScript": "if(AppClient.getUserType()==\"guest\"){\n    return new MockDataTypeItem({\n        type:\"widget\",\n        id:454 \/\/ this widget\n        });\n}\n\nreturn AppClient;",
        "initialPostsScript": "\nif(AppClient.getUserType()!='guest'){\n    return null;\n}\n\nvar updatedItems=NotificationContent.getUpdated();\nvar createdItems=NotificationContent.getCreated();\n\nvar items = [{\n        \"id\": -1,\n        \"discussion\": -1,\n        \"text\": \"calc: items.updated\",\n        \"user\": 0,\n        \"metadata\": {\n            \"name\":\"System\",\n            \"items\":updatedItems.map(function(item){\n                return {\n                        \"type\": item.getType(),\n                        \"id\": item.getId()\n                    };\n            })\n        },\n        \"createdDate\": updatedItems[0].getModificationDate(),\n        \"modifiedDate\": updatedItems[0].getModificationDate(),\n        \"readAccess\": \"public\",\n        \"textHtml\": \"\"\n    },{\n        \"id\": -2,\n        \"discussion\": -1,\n        \"text\": \"calc: items.created\",\n        \"user\": 0,\n        \"metadata\": {\n            \"name\":\"System\",\n            \"items\":createdItems.map(function(item){\n                return {\n                        \"type\": item.getType(),\n                        \"id\": item.getId()\n                    };\n            })\n        },\n        \"createdDate\": createdItems[0].getCreationDate(),\n        \"modifiedDate\": createdItems[0].getCreationDate(),\n        \"readAccess\": \"public\",\n        \"textHtml\": \"\"\n    }\n    \n    return items.sort(function(a, b){ return b.createdDate.localeCompare(a.createdDate)})\n\n];",
        "formatPostScript": "return NotificationContent.formatEventText(post.text, post);",
        "namedView": "defaultNotificationDetail",
        "reverseOrder": true,
        "className": ""
    }
}